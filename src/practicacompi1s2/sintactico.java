
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Jul 30 23:23:51 CST 2015
//----------------------------------------------------

package practicacompi1s2;

import java.io.*;
import java_cup.runtime.*;
import java.util.*;
import javax.swing.JOptionPane;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Jul 30 23:23:51 CST 2015
  */
public class sintactico extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public sintactico() {super();}

  /** Constructor which sets the default scanner. */
  public sintactico(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public sintactico(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\033\000\002\002\004\000\002\002\005\000\002\002" +
    "\005\000\002\002\005\000\002\002\005\000\002\002\005" +
    "\000\002\002\002\000\002\003\004\000\002\004\004\000" +
    "\002\004\004\000\002\005\004\000\002\005\004\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\005" +
    "\004\000\002\005\005\000\002\006\004\000\002\006\004" +
    "\000\002\006\004\000\002\006\004\000\002\006\004\000" +
    "\002\006\004\000\002\006\004\000\002\006\004\000\002" +
    "\006\003\000\002\007\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\066\000\006\002\ufffb\025\005\001\002\000\004\002" +
    "\070\001\002\000\014\026\010\027\006\030\012\031\011" +
    "\032\007\001\002\000\004\011\013\001\002\000\004\011" +
    "\013\001\002\000\004\011\013\001\002\000\004\011\013" +
    "\001\002\000\004\011\013\001\002\000\006\011\015\013" +
    "\016\001\002\000\004\002\ufffe\001\002\000\006\011\015" +
    "\013\016\001\002\000\020\004\021\005\024\006\025\007" +
    "\023\010\026\012\022\014\020\001\002\000\004\002\ufffa" +
    "\001\002\000\006\011\015\013\016\001\002\000\026\011" +
    "\015\013\016\015\042\016\037\017\045\020\036\021\040" +
    "\022\041\023\047\024\046\001\002\000\004\004\034\001" +
    "\002\000\006\011\015\013\016\001\002\000\006\011\015" +
    "\013\016\001\002\000\006\011\015\013\016\001\002\000" +
    "\006\011\015\013\016\001\002\000\004\002\ufff9\001\002" +
    "\000\004\002\ufff4\001\002\000\004\002\ufff5\001\002\000" +
    "\004\002\ufff6\001\002\000\004\002\ufff3\001\002\000\006" +
    "\011\015\013\016\001\002\000\004\002\ufff1\001\002\000" +
    "\004\012\050\001\002\000\004\012\050\001\002\000\004" +
    "\012\050\001\002\000\004\012\050\001\002\000\004\012" +
    "\050\001\002\000\004\002\ufff7\001\002\000\004\002\uffe8" +
    "\001\002\000\004\012\050\001\002\000\004\012\050\001" +
    "\002\000\004\012\050\001\002\000\006\002\ufffb\025\005" +
    "\001\002\000\004\002\uffea\001\002\000\004\002\uffe7\001" +
    "\002\000\004\002\uffe9\001\002\000\004\002\uffee\001\002" +
    "\000\004\002\uffef\001\002\000\004\002\uffeb\001\002\000" +
    "\004\002\uffec\001\002\000\004\002\ufff0\001\002\000\004" +
    "\002\uffed\001\002\000\004\002\ufff2\001\002\000\004\002" +
    "\ufff8\001\002\000\004\002\ufffd\001\002\000\004\002\000" +
    "\001\002\000\004\002\ufffc\001\002\000\004\002\uffff\001" +
    "\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\066\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\066\001\001\000\004\003\065" +
    "\001\001\000\004\003\064\001\001\000\004\003\063\001" +
    "\001\000\004\003\013\001\001\000\004\004\016\001\001" +
    "\000\002\001\001\000\004\004\062\001\001\000\004\005" +
    "\026\001\001\000\002\001\001\000\004\004\061\001\001" +
    "\000\006\004\043\006\042\001\001\000\002\001\001\000" +
    "\004\004\032\001\001\000\004\004\031\001\001\000\004" +
    "\004\030\001\001\000\004\004\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\034\001\001\000\002\001" +
    "\001\000\004\007\060\001\001\000\004\007\057\001\001" +
    "\000\004\007\056\001\001\000\004\007\055\001\001\000" +
    "\004\007\054\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\007\053\001\001\000\004\007\052\001\001\000" +
    "\004\007\050\001\001\000\004\002\051\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintactico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintactico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintactico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



/**Metodo al que se llama automáticamente ante algún error sintactico.*/
public void syntax_error(Symbol s){
System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ " Identificador '" +s.value + " 'no reconocido." );

}
}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$sintactico$actions {


public void datos(Object copiado){
//programa.push(copiado);

}


  private final sintactico parser;

  /** Constructor */
  CUP$sintactico$actions(sintactico parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$sintactico$do_action(
    int                        CUP$sintactico$act_num,
    java_cup.runtime.lr_parser CUP$sintactico$parser,
    java.util.Stack            CUP$sintactico$stack,
    int                        CUP$sintactico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintactico$result;

      /* select the action based on the action number */
      switch (CUP$sintactico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Linea5 ::= Tk_Cerrar Linea0 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea5",5, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Linea4 ::= Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Linea4 ::= Tk_Negro Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Linea4 ::= Tk_Cafe Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Linea4 ::= Tk_Morado Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Linea4 ::= Tk_Naranja Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Linea4 ::= Tk_Amarillo Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Linea4 ::= Tk_Verde Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Linea4 ::= Tk_Azul Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Linea4 ::= Tk_Rojo Linea5 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea4",4, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Linea3 ::= Tk_Cerrar Tk_Coma Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Linea3 ::= Tk_Deci Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Linea3 ::= Tk_Diag Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Linea3 ::= Tk_Por Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Linea3 ::= Tk_Resta Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Linea3 ::= Tk_Suma Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Linea3 ::= Tk_Coma Linea4 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Linea2 ::= Tk_Abrir Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Linea2 ::= Tk_Puntos Linea3 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Linea1 ::= Tk_Abrir Linea2 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea1",1, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Linea0 ::= 
            {
              Object RESULT =null;
		System.out.println("Copilacion Exitosa");  JOptionPane.showMessageDialog(null, "Copilacion Exitosa ", "Copilacion", JOptionPane.WARNING_MESSAGE);
              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Linea0 ::= Tk_Graf Tk_Pol Linea1 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Linea0 ::= Tk_Graf Tk_Rec Linea1 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Linea0 ::= Tk_Graf Tk_Line Linea1 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Linea0 ::= Tk_Graf Tk_Cua Linea1 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Linea0 ::= Tk_Graf Tk_Cir Linea1 
            {
              Object RESULT =null;

              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Linea0 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).value;
		RESULT = start_val;
              CUP$sintactico$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$sintactico$parser.done_parsing();
          return CUP$sintactico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

